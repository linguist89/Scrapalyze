01/04/2020
Created the function scrape_selenium_element.
1) Launches a webdriver.
2) Finds an input box.
3) Sends keys to input box.
4) Scrapes the page and returns a soup of that page.

02/04/2020
Changed function scrape_selenium_element to scrape_selenium_css
1) CSS_selector is a better navigation tool compared to element_name

Added "action_type" as an argument.
1) Allows user to choose between "search" or "click_link"
2) This enables the user to remotely click a link or populate a search bar.

03/04/2020
Added the headless True/False **kwargs to the scrape_selenium_css function.

04/04/2020
Created the class "Scrapalyze" which contains as methods all the previously made functions.

05/04/2020
Changed the find to findAll in find_by_element.
Specified in Docstring that results will be contained in a list.

06/04/2020
Added the get_tag_list method
1) Generates a list of HTML tags that are useful when looking for elements to scrape.

07/04/2020
Added "agent" to specify headers arg when performing a request
1) This bypasses the website's "permission denied" response.

08/04/2020
Added scrapalyze_clean method
1) Removes newlines
2) Replaces double spaces with single spaces

11/04/2020
Created Scrap class
1) Every method in Scrapalyze will return a Scrap class object.
2) These objects will have separate internal methods for formatting.

12/04/2020
1) Create a stats method for the Scrap class
    a) This will display need to know information to make using Scraps easier.
2) Changed the init to only have scrap_list as the input from Scrapalyze
    a) This will make it easier to navigate when the module becomes more complex.
3) Added self.get_tag_list() to init
    a) This will call the method when the class is instantiated, giving the user a list of tags available in the soup.
    
13/04/2020
1) Added get_soup function to Scrapalyze
    a) This makes available the initial soup in Scrapalyze class at the moment it is instantiated.
2) Added display function for Scrap class
    a) Neatly displays each element in the scrap_list
3) Added internal_tags property function for Scrap class
    a) This will allow the user to see which element tags are available internally in the scraped element.
    
14/04/2020
1) Added internal_scrape method to Scrap class
    a) This allows the user to scrape based upon internal tags of a Scrap.
    b) Outputs as a list with the element being the internal scrape or non if the scrap_list element didn't contain the internal_tag.

15/04/2020
1) Changed clean method in Scrap
    a) No longer only removes newline characters.
    b) Removes all punctuation from an element's body of text.
    c) Removed permanent attribute from Scrap, so not it doesn't modify self.scrap_list.
    
16/04/2020
1) Added tokenize and lower to clean method in Scrap

17/04/2020
1) Changed display method to raw in Scrap
2) Added internal scrape stats to Scrap's stats property
3) Added lower case check in Scrap's clean method for non-tokenized output

18/04/2020
1) Fixed self.iscrape variable in Scrap
2) Added internal_scrapes count display to stats in Scrap
3) Added new property method called internal_scrapes that saves internal scrapes

19/04/2020
1) Added README.md file detailing installation instructions

20/04/2020
1) Updated README.md instructions

21/04/2020
1) Added contents_internal_tags to Scrap.stats
2) Removed internal_scrapes
3) Changed scrap_list to contents
4) Added function filter_contents

22/04/2020
1) Added content tags and four layers of embedded tags to stats output in Scrap

23/04/2020
1) Removed all content_tags and layer_tags.
    a) Added scrape_embedded_elements method to Scrap
        - This allows the user to scrap n layers within the Scrap's contents
    b) Added embedded_scrapes method to Scrap
        - This allows the user to display the scrapes or tags of an embedded layer
        - This allows the user to specify which tags that want to include otherwise all elements will be returned
        
24/04/2020
1) Fixed that loop that outputs the number of embedded layers in the Scrap's stats method

25/04/2020
1) Added fast variable to help the speed when the user doesn't want all the scrapes saved in the Scrap.
2) Added the slow_scrape_elements method
3) Added the embedded layers dictionary

26/04/2020
1) Changed embedded_layers method to filter_embedded_layers
    a) Time to display depends on whether a slow or fast scrape was done when initialising the Scrapalyze object.
2) Removed internal_tags property and filter_contents in Scrap

27/04/2020
1) Added show_stats argument to Scrapalyze initialization
    a) This will show stats of the scrape upon initialization, making it easier for the user to see what's available.
2) Changed the output of length of contents to display "Scrap contains n HTML elements."

28/04/2020
1) Added scrape_links method to Scrapalyze
    a) This scrapes all the links on a website.
    b) The method has an argument that filters links based upon the strings you enter.
    c) Added filter by means of regular expression via regex=True argument.
    
07/05/2020
1) Added Analyze.py

08/05/2020
1) Fixed the print_all method in Analyze
    a) This will now print the elements in a similar format to how they appear on the website.
    
09/05/2020
1) Created token method for Analyze
    a) This will create a 2-d array of all tokens in a body of text.
    
10/05/2020
1) Added remove_punctuation method to Analyze

11/05/2020
1) Added remove_punctuation parameter to print_all method in Analyze

13/05/2020
1) Added remove_stopwords method to Analyze
    a) Added remove_stopwords parameter to the tokenize method in Analyze.
    
14/05/2020
1) Added remove_stopwords parameter to print_all method in Analyze

15/05/2020
1) Added sw and custom_stopwords parameters to remove_stopwords

16/05/2020
1) Fixed the remove_punctuation parameter error in the tokenize method

17/05/2020
1) Fixed remove_stopwords parameter in the tokenize method

18/05/2020
1) Fixed the problem of displaying the tokenized sentences i.e. 2d lists

19/05/2020
1) Fixed the problem of the remove_stopwords displaying incorrectly in the tokenize method

21/05/2020
1) Added make_lowercase to Analyze method
    a) Added make_lowercase parameter to print_all and tokenize methods. 
    
22/05/2020
1) Fixed tokenize method

23/05/2020
1) Added vocab_count parameter to tokenize method

25/05/2020
1) Added print_all explanations to the README.md

27/05/2020
1) Identified the NoneType error problem in Analyze

08/06/2020
1) Fixed tags_elements output problem when parameter is set to 0

09/06/2020
1) Fixed "there are no more layers" message